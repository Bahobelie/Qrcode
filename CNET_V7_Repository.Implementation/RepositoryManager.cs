
using CNET_V7_Entities.Data;
using CNET_V7_Repository.Contracts;
using CNET_V7_Repository.Contracts.SecuritySchema;
using CNET_V7_Repository.Implementation.SecuritySchema;
using CNET_V7_Repository.Contracts.AccountingSchema;
using CNET_V7_Repository.Implementation.AccountingSchema;
using CNET_V7_Repository.Contracts.CommonSchema;
using CNET_V7_Repository.Implementation.CommonSchema;
using CNET_V7_Repository.Contracts.SettingSchema;
using CNET_V7_Repository.Implementation.SettingSchema;
using CNET_V7_Repository.Contracts.QuestionarySchema;
using CNET_V7_Repository.Implementation.QuestionarySchema;
using CNET_V7_Repository.Contracts.ArticleSchema;
using CNET_V7_Repository.Implementation.ArticleSchema;
using CNET_V7_Repository.Contracts.HrmsSchema;
using CNET_V7_Repository.Implementation.HrmsSchema;
using CNET_V7_Repository.Contracts.ConsigneeSchema;
using CNET_V7_Repository.Implementation.ConsigneeSchema;
using CNET_V7_Repository.Contracts.TransactionSchema;
using CNET_V7_Repository.Implementation.TransactionSchema;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CNET_V7_Repository.Implementation
{
    public class RepositoryManager : IRepositoryManager
    {
        private readonly CnetV7DbContext _repositoryContext;

        
		private readonly Lazy<IAccessMatrixRepository> _accessMatrixRepository;
		private readonly Lazy<IAccountRepository> _accountRepository;
		private readonly Lazy<IAccountMapRepository> _accountMapRepository;
		private readonly Lazy<IAcLogRepository> _acLogRepository;
		private readonly Lazy<IActivityRepository> _activityRepository;
		private readonly Lazy<IActivityDefinitionRepository> _activityDefinitionRepository;
		private readonly Lazy<IAnswerKeyRepository> _answerKeyRepository;
		private readonly Lazy<IAnswerSheetRepository> _answerSheetRepository;
		private readonly Lazy<IArticleRepository> _articleRepository;
		private readonly Lazy<IArticleUserRepository> _articleUserRepository;
		private readonly Lazy<IAttachmentRepository> _attachmentRepository;
		private readonly Lazy<IAttendanceLogRepository> _attendanceLogRepository;
		private readonly Lazy<IBankAccountDetailRepository> _bankAccountDetailRepository;
		private readonly Lazy<IBeginingBalanceRepository> _beginingBalanceRepository;
		private readonly Lazy<IBeginingTransactionRepository> _beginingTransactionRepository;
		private readonly Lazy<IBlankFillRepository> _blankFillRepository;
		private readonly Lazy<ICardRepository> _cardRepository;
		private readonly Lazy<IChooseRepository> _chooseRepository;
		private readonly Lazy<IClosedRelationRepository> _closedRelationRepository;
		private readonly Lazy<ICloudSyncRepository> _cloudSyncRepository;
		private readonly Lazy<ICnetlicenseRepository> _cnetlicenseRepository;
		private readonly Lazy<ICnetmediumRepository> _cnetmediumRepository;
		private readonly Lazy<IConfigurationRepository> _configurationRepository;
		private readonly Lazy<IConsigneeRepository> _consigneeRepository;
		private readonly Lazy<IConsigneeUnitRepository> _consigneeUnitRepository;
		private readonly Lazy<IConsigneeUserRepository> _consigneeUserRepository;
		private readonly Lazy<IControlAccountRepository> _controlAccountRepository;
		private readonly Lazy<IConversionDefinitionRepository> _conversionDefinitionRepository;
		private readonly Lazy<ICountryRepository> _countryRepository;
		private readonly Lazy<ICurrencyRepository> _currencyRepository;
		private readonly Lazy<IDelegateRepository> _delegateRepository;
		private readonly Lazy<IDenominationRepository> _denominationRepository;
		private readonly Lazy<IDenominationDetailRepository> _denominationDetailRepository;
		private readonly Lazy<IDepreciationRuleRepository> _depreciationRuleRepository;
		private readonly Lazy<IDeviceRepository> _deviceRepository;
		private readonly Lazy<IDiscountFactorRepository> _discountFactorRepository;
		private readonly Lazy<IDistributionRepository> _distributionRepository;
		private readonly Lazy<IEvaluationSheetRepository> _evaluationSheetRepository;
		private readonly Lazy<IExchangeRateRepository> _exchangeRateRepository;
		private readonly Lazy<IFieldFormatRepository> _fieldFormatRepository;
		private readonly Lazy<IFunctionalityRepository> _functionalityRepository;
		private readonly Lazy<IGslacctRequirementRepository> _gslacctRequirementRepository;
		private readonly Lazy<IGsltaxRepository> _gsltaxRepository;
		private readonly Lazy<IGsluserRepository> _gsluserRepository;
		private readonly Lazy<IHolidayRepository> _holidayRepository;
		private readonly Lazy<IHolidayDefinitionRepository> _holidayDefinitionRepository;
		private readonly Lazy<IIddefinitionRepository> _iddefinitionRepository;
		private readonly Lazy<IIdentificationRepository> _identificationRepository;
		private readonly Lazy<IIdsettingRepository> _idsettingRepository;
		private readonly Lazy<IIssuedCardRepository> _issuedCardRepository;
		private readonly Lazy<IJournalDetailRepository> _journalDetailRepository;
		private readonly Lazy<ILanguageRepository> _languageRepository;
		private readonly Lazy<ILanguagePreferenceRepository> _languagePreferenceRepository;
		private readonly Lazy<ILineItemRepository> _lineItemRepository;
		private readonly Lazy<ILineItemConversionRepository> _lineItemConversionRepository;
		private readonly Lazy<ILineItemReferenceRepository> _lineItemReferenceRepository;
		private readonly Lazy<ILineItemValueFactorRepository> _lineItemValueFactorRepository;
		private readonly Lazy<ILocationRepository> _locationRepository;
		private readonly Lazy<ILookupRepository> _lookupRepository;
		private readonly Lazy<IMenuDesignerRepository> _menuDesignerRepository;
		private readonly Lazy<IMovieRepository> _movieRepository;
		private readonly Lazy<IMovieScheduleRepository> _movieScheduleRepository;
		private readonly Lazy<INonCashTransactionRepository> _nonCashTransactionRepository;
		private readonly Lazy<IObjectStateRepository> _objectStateRepository;
		private readonly Lazy<IObjectStateDefinitionRepository> _objectStateDefinitionRepository;
		private readonly Lazy<IOrderStationMapRepository> _orderStationMapRepository;
		private readonly Lazy<IPeriodRepository> _periodRepository;
		private readonly Lazy<IPreferenceRepository> _preferenceRepository;
		private readonly Lazy<IPreferenceAccessRepository> _preferenceAccessRepository;
		private readonly Lazy<IPreferentialValueFactorRepository> _preferentialValueFactorRepository;
		private readonly Lazy<IProgressTaxRateRepository> _progressTaxRateRepository;
		private readonly Lazy<IQuestionRepository> _questionRepository;
		private readonly Lazy<IQuestionDetailRepository> _questionDetailRepository;
		private readonly Lazy<IQuestionRouterRepository> _questionRouterRepository;
		private readonly Lazy<IRangeRepository> _rangeRepository;
		private readonly Lazy<IReconciliationDetailRepository> _reconciliationDetailRepository;
		private readonly Lazy<IReconciliationSummaryRepository> _reconciliationSummaryRepository;
		private readonly Lazy<IRelationRepository> _relationRepository;
		private readonly Lazy<IRelationalStateRepository> _relationalStateRepository;
		private readonly Lazy<IReportRepository> _reportRepository;
		private readonly Lazy<IReportHistoryRepository> _reportHistoryRepository;
		private readonly Lazy<IRequiredGslRepository> _requiredGslRepository;
		private readonly Lazy<IRequiredGsldetailRepository> _requiredGsldetailRepository;
		private readonly Lazy<IRoleActivityRepository> _roleActivityRepository;
		private readonly Lazy<IRouteRepository> _routeRepository;
		private readonly Lazy<IRouteAssignmentRepository> _routeAssignmentRepository;
		private readonly Lazy<IScheduleRepository> _scheduleRepository;
		private readonly Lazy<IScheduleDetailRepository> _scheduleDetailRepository;
		private readonly Lazy<IScheduleHeaderRepository> _scheduleHeaderRepository;
		private readonly Lazy<ISeasonalMessageRepository> _seasonalMessageRepository;
		private readonly Lazy<ISeatArrangementRepository> _seatArrangementRepository;
		private readonly Lazy<ISeatTransactionRepository> _seatTransactionRepository;
		private readonly Lazy<ISerialDefinitionRepository> _serialDefinitionRepository;
		private readonly Lazy<ISpaceRepository> _spaceRepository;
		private readonly Lazy<ISpaceDirectionRepository> _spaceDirectionRepository;
		private readonly Lazy<ISpecificationRepository> _specificationRepository;
		private readonly Lazy<IStockBalanceRepository> _stockBalanceRepository;
		private readonly Lazy<IStockLevelRepository> _stockLevelRepository;
		private readonly Lazy<ISubCountryRepository> _subCountryRepository;
		private readonly Lazy<ISubtitleRepository> _subtitleRepository;
		private readonly Lazy<ISystemConstantRepository> _systemConstantRepository;
		private readonly Lazy<ITaxRepository> _taxRepository;
		private readonly Lazy<ITaxTransactionRepository> _taxTransactionRepository;
		private readonly Lazy<ITermDefinitionRepository> _termDefinitionRepository;
		private readonly Lazy<ITransactionCurrencyRepository> _transactionCurrencyRepository;
		private readonly Lazy<ITransactionLimitRepository> _transactionLimitRepository;
		private readonly Lazy<ITransactionReferenceRepository> _transactionReferenceRepository;
		private readonly Lazy<ITrialBalanceRepository> _trialBalanceRepository;
		private readonly Lazy<IUserRepository> _userRepository;
		private readonly Lazy<IUserRoleMapperRepository> _userRoleMapperRepository;
		private readonly Lazy<IValueRepository> _valueRepository;
		private readonly Lazy<IValueChangeLogRepository> _valueChangeLogRepository;
		private readonly Lazy<IValueFactorRepository> _valueFactorRepository;
		private readonly Lazy<IValueFactorDefinitionRepository> _valueFactorDefinitionRepository;
		private readonly Lazy<IValueFactorSetupRepository> _valueFactorSetupRepository;
		private readonly Lazy<IVoucherRepository> _voucherRepository;
		private readonly Lazy<IVoucherAccountRepository> _voucherAccountRepository;
		private readonly Lazy<IVoucherConsigneeListRepository> _voucherConsigneeListRepository;
		private readonly Lazy<IVoucherExtensionRepository> _voucherExtensionRepository;
		private readonly Lazy<IVoucherLookupListRepository> _voucherLookupListRepository;
		private readonly Lazy<IVoucherStoreMappingRepository> _voucherStoreMappingRepository;
		private readonly Lazy<IVoucherTermRepository> _voucherTermRepository;
		private readonly Lazy<IWriteUpRepository> _writeUpRepository;

        public RepositoryManager(CnetV7DbContext repositoryContext)
        {
            _repositoryContext = repositoryContext;
            
			_accessMatrixRepository = new Lazy<IAccessMatrixRepository>(()=>new AccessMatrixRepository(repositoryContext));
			_accountRepository = new Lazy<IAccountRepository>(()=>new AccountRepository(repositoryContext));
			_accountMapRepository = new Lazy<IAccountMapRepository>(()=>new AccountMapRepository(repositoryContext));
			_acLogRepository = new Lazy<IAcLogRepository>(()=>new AcLogRepository(repositoryContext));
			_activityRepository = new Lazy<IActivityRepository>(()=>new ActivityRepository(repositoryContext));
			_activityDefinitionRepository = new Lazy<IActivityDefinitionRepository>(()=>new ActivityDefinitionRepository(repositoryContext));
			_answerKeyRepository = new Lazy<IAnswerKeyRepository>(()=>new AnswerKeyRepository(repositoryContext));
			_answerSheetRepository = new Lazy<IAnswerSheetRepository>(()=>new AnswerSheetRepository(repositoryContext));
			_articleRepository = new Lazy<IArticleRepository>(()=>new ArticleRepository(repositoryContext));
			_articleUserRepository = new Lazy<IArticleUserRepository>(()=>new ArticleUserRepository(repositoryContext));
			_attachmentRepository = new Lazy<IAttachmentRepository>(()=>new AttachmentRepository(repositoryContext));
			_attendanceLogRepository = new Lazy<IAttendanceLogRepository>(()=>new AttendanceLogRepository(repositoryContext));
			_bankAccountDetailRepository = new Lazy<IBankAccountDetailRepository>(()=>new BankAccountDetailRepository(repositoryContext));
			_beginingBalanceRepository = new Lazy<IBeginingBalanceRepository>(()=>new BeginingBalanceRepository(repositoryContext));
			_beginingTransactionRepository = new Lazy<IBeginingTransactionRepository>(()=>new BeginingTransactionRepository(repositoryContext));
			_blankFillRepository = new Lazy<IBlankFillRepository>(()=>new BlankFillRepository(repositoryContext));
			_cardRepository = new Lazy<ICardRepository>(()=>new CardRepository(repositoryContext));
			_chooseRepository = new Lazy<IChooseRepository>(()=>new ChooseRepository(repositoryContext));
			_closedRelationRepository = new Lazy<IClosedRelationRepository>(()=>new ClosedRelationRepository(repositoryContext));
			_cloudSyncRepository = new Lazy<ICloudSyncRepository>(()=>new CloudSyncRepository(repositoryContext));
			_cnetlicenseRepository = new Lazy<ICnetlicenseRepository>(()=>new CnetlicenseRepository(repositoryContext));
			_cnetmediumRepository = new Lazy<ICnetmediumRepository>(()=>new CnetmediumRepository(repositoryContext));
			_configurationRepository = new Lazy<IConfigurationRepository>(()=>new ConfigurationRepository(repositoryContext));
			_consigneeRepository = new Lazy<IConsigneeRepository>(()=>new ConsigneeRepository(repositoryContext));
			_consigneeUnitRepository = new Lazy<IConsigneeUnitRepository>(()=>new ConsigneeUnitRepository(repositoryContext));
			_consigneeUserRepository = new Lazy<IConsigneeUserRepository>(()=>new ConsigneeUserRepository(repositoryContext));
			_controlAccountRepository = new Lazy<IControlAccountRepository>(()=>new ControlAccountRepository(repositoryContext));
			_conversionDefinitionRepository = new Lazy<IConversionDefinitionRepository>(()=>new ConversionDefinitionRepository(repositoryContext));
			_countryRepository = new Lazy<ICountryRepository>(()=>new CountryRepository(repositoryContext));
			_currencyRepository = new Lazy<ICurrencyRepository>(()=>new CurrencyRepository(repositoryContext));
			_delegateRepository = new Lazy<IDelegateRepository>(()=>new DelegateRepository(repositoryContext));
			_denominationRepository = new Lazy<IDenominationRepository>(()=>new DenominationRepository(repositoryContext));
			_denominationDetailRepository = new Lazy<IDenominationDetailRepository>(()=>new DenominationDetailRepository(repositoryContext));
			_depreciationRuleRepository = new Lazy<IDepreciationRuleRepository>(()=>new DepreciationRuleRepository(repositoryContext));
			_deviceRepository = new Lazy<IDeviceRepository>(()=>new DeviceRepository(repositoryContext));
			_discountFactorRepository = new Lazy<IDiscountFactorRepository>(()=>new DiscountFactorRepository(repositoryContext));
			_distributionRepository = new Lazy<IDistributionRepository>(()=>new DistributionRepository(repositoryContext));
			_evaluationSheetRepository = new Lazy<IEvaluationSheetRepository>(()=>new EvaluationSheetRepository(repositoryContext));
			_exchangeRateRepository = new Lazy<IExchangeRateRepository>(()=>new ExchangeRateRepository(repositoryContext));
			_fieldFormatRepository = new Lazy<IFieldFormatRepository>(()=>new FieldFormatRepository(repositoryContext));
			_functionalityRepository = new Lazy<IFunctionalityRepository>(()=>new FunctionalityRepository(repositoryContext));
			_gslacctRequirementRepository = new Lazy<IGslacctRequirementRepository>(()=>new GslacctRequirementRepository(repositoryContext));
			_gsltaxRepository = new Lazy<IGsltaxRepository>(()=>new GsltaxRepository(repositoryContext));
			_gsluserRepository = new Lazy<IGsluserRepository>(()=>new GsluserRepository(repositoryContext));
			_holidayRepository = new Lazy<IHolidayRepository>(()=>new HolidayRepository(repositoryContext));
			_holidayDefinitionRepository = new Lazy<IHolidayDefinitionRepository>(()=>new HolidayDefinitionRepository(repositoryContext));
			_iddefinitionRepository = new Lazy<IIddefinitionRepository>(()=>new IddefinitionRepository(repositoryContext));
			_identificationRepository = new Lazy<IIdentificationRepository>(()=>new IdentificationRepository(repositoryContext));
			_idsettingRepository = new Lazy<IIdsettingRepository>(()=>new IdsettingRepository(repositoryContext));
			_issuedCardRepository = new Lazy<IIssuedCardRepository>(()=>new IssuedCardRepository(repositoryContext));
			_journalDetailRepository = new Lazy<IJournalDetailRepository>(()=>new JournalDetailRepository(repositoryContext));
			_languageRepository = new Lazy<ILanguageRepository>(()=>new LanguageRepository(repositoryContext));
			_languagePreferenceRepository = new Lazy<ILanguagePreferenceRepository>(()=>new LanguagePreferenceRepository(repositoryContext));
			_lineItemRepository = new Lazy<ILineItemRepository>(()=>new LineItemRepository(repositoryContext));
			_lineItemConversionRepository = new Lazy<ILineItemConversionRepository>(()=>new LineItemConversionRepository(repositoryContext));
			_lineItemReferenceRepository = new Lazy<ILineItemReferenceRepository>(()=>new LineItemReferenceRepository(repositoryContext));
			_lineItemValueFactorRepository = new Lazy<ILineItemValueFactorRepository>(()=>new LineItemValueFactorRepository(repositoryContext));
			_locationRepository = new Lazy<ILocationRepository>(()=>new LocationRepository(repositoryContext));
			_lookupRepository = new Lazy<ILookupRepository>(()=>new LookupRepository(repositoryContext));
			_menuDesignerRepository = new Lazy<IMenuDesignerRepository>(()=>new MenuDesignerRepository(repositoryContext));
			_movieRepository = new Lazy<IMovieRepository>(()=>new MovieRepository(repositoryContext));
			_movieScheduleRepository = new Lazy<IMovieScheduleRepository>(()=>new MovieScheduleRepository(repositoryContext));
			_nonCashTransactionRepository = new Lazy<INonCashTransactionRepository>(()=>new NonCashTransactionRepository(repositoryContext));
			_objectStateRepository = new Lazy<IObjectStateRepository>(()=>new ObjectStateRepository(repositoryContext));
			_objectStateDefinitionRepository = new Lazy<IObjectStateDefinitionRepository>(()=>new ObjectStateDefinitionRepository(repositoryContext));
			_orderStationMapRepository = new Lazy<IOrderStationMapRepository>(()=>new OrderStationMapRepository(repositoryContext));
			_periodRepository = new Lazy<IPeriodRepository>(()=>new PeriodRepository(repositoryContext));
			_preferenceRepository = new Lazy<IPreferenceRepository>(()=>new PreferenceRepository(repositoryContext));
			_preferenceAccessRepository = new Lazy<IPreferenceAccessRepository>(()=>new PreferenceAccessRepository(repositoryContext));
			_preferentialValueFactorRepository = new Lazy<IPreferentialValueFactorRepository>(()=>new PreferentialValueFactorRepository(repositoryContext));
			_progressTaxRateRepository = new Lazy<IProgressTaxRateRepository>(()=>new ProgressTaxRateRepository(repositoryContext));
			_questionRepository = new Lazy<IQuestionRepository>(()=>new QuestionRepository(repositoryContext));
			_questionDetailRepository = new Lazy<IQuestionDetailRepository>(()=>new QuestionDetailRepository(repositoryContext));
			_questionRouterRepository = new Lazy<IQuestionRouterRepository>(()=>new QuestionRouterRepository(repositoryContext));
			_rangeRepository = new Lazy<IRangeRepository>(()=>new RangeRepository(repositoryContext));
			_reconciliationDetailRepository = new Lazy<IReconciliationDetailRepository>(()=>new ReconciliationDetailRepository(repositoryContext));
			_reconciliationSummaryRepository = new Lazy<IReconciliationSummaryRepository>(()=>new ReconciliationSummaryRepository(repositoryContext));
			_relationRepository = new Lazy<IRelationRepository>(()=>new RelationRepository(repositoryContext));
			_relationalStateRepository = new Lazy<IRelationalStateRepository>(()=>new RelationalStateRepository(repositoryContext));
			_reportRepository = new Lazy<IReportRepository>(()=>new ReportRepository(repositoryContext));
			_reportHistoryRepository = new Lazy<IReportHistoryRepository>(()=>new ReportHistoryRepository(repositoryContext));
			_requiredGslRepository = new Lazy<IRequiredGslRepository>(()=>new RequiredGslRepository(repositoryContext));
			_requiredGsldetailRepository = new Lazy<IRequiredGsldetailRepository>(()=>new RequiredGsldetailRepository(repositoryContext));
			_roleActivityRepository = new Lazy<IRoleActivityRepository>(()=>new RoleActivityRepository(repositoryContext));
			_routeRepository = new Lazy<IRouteRepository>(()=>new RouteRepository(repositoryContext));
			_routeAssignmentRepository = new Lazy<IRouteAssignmentRepository>(()=>new RouteAssignmentRepository(repositoryContext));
			_scheduleRepository = new Lazy<IScheduleRepository>(()=>new ScheduleRepository(repositoryContext));
			_scheduleDetailRepository = new Lazy<IScheduleDetailRepository>(()=>new ScheduleDetailRepository(repositoryContext));
			_scheduleHeaderRepository = new Lazy<IScheduleHeaderRepository>(()=>new ScheduleHeaderRepository(repositoryContext));
			_seasonalMessageRepository = new Lazy<ISeasonalMessageRepository>(()=>new SeasonalMessageRepository(repositoryContext));
			_seatArrangementRepository = new Lazy<ISeatArrangementRepository>(()=>new SeatArrangementRepository(repositoryContext));
			_seatTransactionRepository = new Lazy<ISeatTransactionRepository>(()=>new SeatTransactionRepository(repositoryContext));
			_serialDefinitionRepository = new Lazy<ISerialDefinitionRepository>(()=>new SerialDefinitionRepository(repositoryContext));
			_spaceRepository = new Lazy<ISpaceRepository>(()=>new SpaceRepository(repositoryContext));
			_spaceDirectionRepository = new Lazy<ISpaceDirectionRepository>(()=>new SpaceDirectionRepository(repositoryContext));
			_specificationRepository = new Lazy<ISpecificationRepository>(()=>new SpecificationRepository(repositoryContext));
			_stockBalanceRepository = new Lazy<IStockBalanceRepository>(()=>new StockBalanceRepository(repositoryContext));
			_stockLevelRepository = new Lazy<IStockLevelRepository>(()=>new StockLevelRepository(repositoryContext));
			_subCountryRepository = new Lazy<ISubCountryRepository>(()=>new SubCountryRepository(repositoryContext));
			_subtitleRepository = new Lazy<ISubtitleRepository>(()=>new SubtitleRepository(repositoryContext));
			_systemConstantRepository = new Lazy<ISystemConstantRepository>(()=>new SystemConstantRepository(repositoryContext));
			_taxRepository = new Lazy<ITaxRepository>(()=>new TaxRepository(repositoryContext));
			_taxTransactionRepository = new Lazy<ITaxTransactionRepository>(()=>new TaxTransactionRepository(repositoryContext));
			_termDefinitionRepository = new Lazy<ITermDefinitionRepository>(()=>new TermDefinitionRepository(repositoryContext));
			_transactionCurrencyRepository = new Lazy<ITransactionCurrencyRepository>(()=>new TransactionCurrencyRepository(repositoryContext));
			_transactionLimitRepository = new Lazy<ITransactionLimitRepository>(()=>new TransactionLimitRepository(repositoryContext));
			_transactionReferenceRepository = new Lazy<ITransactionReferenceRepository>(()=>new TransactionReferenceRepository(repositoryContext));
			_trialBalanceRepository = new Lazy<ITrialBalanceRepository>(()=>new TrialBalanceRepository(repositoryContext));
			_userRepository = new Lazy<IUserRepository>(()=>new UserRepository(repositoryContext));
			_userRoleMapperRepository = new Lazy<IUserRoleMapperRepository>(()=>new UserRoleMapperRepository(repositoryContext));
			_valueRepository = new Lazy<IValueRepository>(()=>new ValueRepository(repositoryContext));
			_valueChangeLogRepository = new Lazy<IValueChangeLogRepository>(()=>new ValueChangeLogRepository(repositoryContext));
			_valueFactorRepository = new Lazy<IValueFactorRepository>(()=>new ValueFactorRepository(repositoryContext));
			_valueFactorDefinitionRepository = new Lazy<IValueFactorDefinitionRepository>(()=>new ValueFactorDefinitionRepository(repositoryContext));
			_valueFactorSetupRepository = new Lazy<IValueFactorSetupRepository>(()=>new ValueFactorSetupRepository(repositoryContext));
			_voucherRepository = new Lazy<IVoucherRepository>(()=>new VoucherRepository(repositoryContext));
			_voucherAccountRepository = new Lazy<IVoucherAccountRepository>(()=>new VoucherAccountRepository(repositoryContext));
			_voucherConsigneeListRepository = new Lazy<IVoucherConsigneeListRepository>(()=>new VoucherConsigneeListRepository(repositoryContext));
			_voucherExtensionRepository = new Lazy<IVoucherExtensionRepository>(()=>new VoucherExtensionRepository(repositoryContext));
			_voucherLookupListRepository = new Lazy<IVoucherLookupListRepository>(()=>new VoucherLookupListRepository(repositoryContext));
			_voucherStoreMappingRepository = new Lazy<IVoucherStoreMappingRepository>(()=>new VoucherStoreMappingRepository(repositoryContext));
			_voucherTermRepository = new Lazy<IVoucherTermRepository>(()=>new VoucherTermRepository(repositoryContext));
			_writeUpRepository = new Lazy<IWriteUpRepository>(()=>new WriteUpRepository(repositoryContext));
        }

        public void Save() => _repositoryContext.SaveChanges();
        
		public IAccessMatrixRepository AccessMatrix => _accessMatrixRepository.Value;
		public IAccountRepository Account => _accountRepository.Value;
		public IAccountMapRepository AccountMap => _accountMapRepository.Value;
		public IAcLogRepository AcLog => _acLogRepository.Value;
		public IActivityRepository Activity => _activityRepository.Value;
		public IActivityDefinitionRepository ActivityDefinition => _activityDefinitionRepository.Value;
		public IAnswerKeyRepository AnswerKey => _answerKeyRepository.Value;
		public IAnswerSheetRepository AnswerSheet => _answerSheetRepository.Value;
		public IArticleRepository Article => _articleRepository.Value;
		public IArticleUserRepository ArticleUser => _articleUserRepository.Value;
		public IAttachmentRepository Attachment => _attachmentRepository.Value;
		public IAttendanceLogRepository AttendanceLog => _attendanceLogRepository.Value;
		public IBankAccountDetailRepository BankAccountDetail => _bankAccountDetailRepository.Value;
		public IBeginingBalanceRepository BeginingBalance => _beginingBalanceRepository.Value;
		public IBeginingTransactionRepository BeginingTransaction => _beginingTransactionRepository.Value;
		public IBlankFillRepository BlankFill => _blankFillRepository.Value;
		public ICardRepository Card => _cardRepository.Value;
		public IChooseRepository Choose => _chooseRepository.Value;
		public IClosedRelationRepository ClosedRelation => _closedRelationRepository.Value;
		public ICloudSyncRepository CloudSync => _cloudSyncRepository.Value;
		public ICnetlicenseRepository Cnetlicense => _cnetlicenseRepository.Value;
		public ICnetmediumRepository Cnetmedium => _cnetmediumRepository.Value;
		public IConfigurationRepository Configuration => _configurationRepository.Value;
		public IConsigneeRepository Consignee => _consigneeRepository.Value;
		public IConsigneeUnitRepository ConsigneeUnit => _consigneeUnitRepository.Value;
		public IConsigneeUserRepository ConsigneeUser => _consigneeUserRepository.Value;
		public IControlAccountRepository ControlAccount => _controlAccountRepository.Value;
		public IConversionDefinitionRepository ConversionDefinition => _conversionDefinitionRepository.Value;
		public ICountryRepository Country => _countryRepository.Value;
		public ICurrencyRepository Currency => _currencyRepository.Value;
		public IDelegateRepository Delegate => _delegateRepository.Value;
		public IDenominationRepository Denomination => _denominationRepository.Value;
		public IDenominationDetailRepository DenominationDetail => _denominationDetailRepository.Value;
		public IDepreciationRuleRepository DepreciationRule => _depreciationRuleRepository.Value;
		public IDeviceRepository Device => _deviceRepository.Value;
		public IDiscountFactorRepository DiscountFactor => _discountFactorRepository.Value;
		public IDistributionRepository Distribution => _distributionRepository.Value;
		public IEvaluationSheetRepository EvaluationSheet => _evaluationSheetRepository.Value;
		public IExchangeRateRepository ExchangeRate => _exchangeRateRepository.Value;
		public IFieldFormatRepository FieldFormat => _fieldFormatRepository.Value;
		public IFunctionalityRepository Functionality => _functionalityRepository.Value;
		public IGslacctRequirementRepository GslacctRequirement => _gslacctRequirementRepository.Value;
		public IGsltaxRepository Gsltax => _gsltaxRepository.Value;
		public IGsluserRepository Gsluser => _gsluserRepository.Value;
		public IHolidayRepository Holiday => _holidayRepository.Value;
		public IHolidayDefinitionRepository HolidayDefinition => _holidayDefinitionRepository.Value;
		public IIddefinitionRepository Iddefinition => _iddefinitionRepository.Value;
		public IIdentificationRepository Identification => _identificationRepository.Value;
		public IIdsettingRepository Idsetting => _idsettingRepository.Value;
		public IIssuedCardRepository IssuedCard => _issuedCardRepository.Value;
		public IJournalDetailRepository JournalDetail => _journalDetailRepository.Value;
		public ILanguageRepository Language => _languageRepository.Value;
		public ILanguagePreferenceRepository LanguagePreference => _languagePreferenceRepository.Value;
		public ILineItemRepository LineItem => _lineItemRepository.Value;
		public ILineItemConversionRepository LineItemConversion => _lineItemConversionRepository.Value;
		public ILineItemReferenceRepository LineItemReference => _lineItemReferenceRepository.Value;
		public ILineItemValueFactorRepository LineItemValueFactor => _lineItemValueFactorRepository.Value;
		public ILocationRepository Location => _locationRepository.Value;
		public ILookupRepository Lookup => _lookupRepository.Value;
		public IMenuDesignerRepository MenuDesigner => _menuDesignerRepository.Value;
		public IMovieRepository Movie => _movieRepository.Value;
		public IMovieScheduleRepository MovieSchedule => _movieScheduleRepository.Value;
		public INonCashTransactionRepository NonCashTransaction => _nonCashTransactionRepository.Value;
		public IObjectStateRepository ObjectState => _objectStateRepository.Value;
		public IObjectStateDefinitionRepository ObjectStateDefinition => _objectStateDefinitionRepository.Value;
		public IOrderStationMapRepository OrderStationMap => _orderStationMapRepository.Value;
		public IPeriodRepository Period => _periodRepository.Value;
		public IPreferenceRepository Preference => _preferenceRepository.Value;
		public IPreferenceAccessRepository PreferenceAccess => _preferenceAccessRepository.Value;
		public IPreferentialValueFactorRepository PreferentialValueFactor => _preferentialValueFactorRepository.Value;
		public IProgressTaxRateRepository ProgressTaxRate => _progressTaxRateRepository.Value;
		public IQuestionRepository Question => _questionRepository.Value;
		public IQuestionDetailRepository QuestionDetail => _questionDetailRepository.Value;
		public IQuestionRouterRepository QuestionRouter => _questionRouterRepository.Value;
		public IRangeRepository Range => _rangeRepository.Value;
		public IReconciliationDetailRepository ReconciliationDetail => _reconciliationDetailRepository.Value;
		public IReconciliationSummaryRepository ReconciliationSummary => _reconciliationSummaryRepository.Value;
		public IRelationRepository Relation => _relationRepository.Value;
		public IRelationalStateRepository RelationalState => _relationalStateRepository.Value;
		public IReportRepository Report => _reportRepository.Value;
		public IReportHistoryRepository ReportHistory => _reportHistoryRepository.Value;
		public IRequiredGslRepository RequiredGsl => _requiredGslRepository.Value;
		public IRequiredGsldetailRepository RequiredGsldetail => _requiredGsldetailRepository.Value;
		public IRoleActivityRepository RoleActivity => _roleActivityRepository.Value;
		public IRouteRepository Route => _routeRepository.Value;
		public IRouteAssignmentRepository RouteAssignment => _routeAssignmentRepository.Value;
		public IScheduleRepository Schedule => _scheduleRepository.Value;
		public IScheduleDetailRepository ScheduleDetail => _scheduleDetailRepository.Value;
		public IScheduleHeaderRepository ScheduleHeader => _scheduleHeaderRepository.Value;
		public ISeasonalMessageRepository SeasonalMessage => _seasonalMessageRepository.Value;
		public ISeatArrangementRepository SeatArrangement => _seatArrangementRepository.Value;
		public ISeatTransactionRepository SeatTransaction => _seatTransactionRepository.Value;
		public ISerialDefinitionRepository SerialDefinition => _serialDefinitionRepository.Value;
		public ISpaceRepository Space => _spaceRepository.Value;
		public ISpaceDirectionRepository SpaceDirection => _spaceDirectionRepository.Value;
		public ISpecificationRepository Specification => _specificationRepository.Value;
		public IStockBalanceRepository StockBalance => _stockBalanceRepository.Value;
		public IStockLevelRepository StockLevel => _stockLevelRepository.Value;
		public ISubCountryRepository SubCountry => _subCountryRepository.Value;
		public ISubtitleRepository Subtitle => _subtitleRepository.Value;
		public ISystemConstantRepository SystemConstant => _systemConstantRepository.Value;
		public ITaxRepository Tax => _taxRepository.Value;
		public ITaxTransactionRepository TaxTransaction => _taxTransactionRepository.Value;
		public ITermDefinitionRepository TermDefinition => _termDefinitionRepository.Value;
		public ITransactionCurrencyRepository TransactionCurrency => _transactionCurrencyRepository.Value;
		public ITransactionLimitRepository TransactionLimit => _transactionLimitRepository.Value;
		public ITransactionReferenceRepository TransactionReference => _transactionReferenceRepository.Value;
		public ITrialBalanceRepository TrialBalance => _trialBalanceRepository.Value;
		public IUserRepository User => _userRepository.Value;
		public IUserRoleMapperRepository UserRoleMapper => _userRoleMapperRepository.Value;
		public IValueRepository Value => _valueRepository.Value;
		public IValueChangeLogRepository ValueChangeLog => _valueChangeLogRepository.Value;
		public IValueFactorRepository ValueFactor => _valueFactorRepository.Value;
		public IValueFactorDefinitionRepository ValueFactorDefinition => _valueFactorDefinitionRepository.Value;
		public IValueFactorSetupRepository ValueFactorSetup => _valueFactorSetupRepository.Value;
		public IVoucherRepository Voucher => _voucherRepository.Value;
		public IVoucherAccountRepository VoucherAccount => _voucherAccountRepository.Value;
		public IVoucherConsigneeListRepository VoucherConsigneeList => _voucherConsigneeListRepository.Value;
		public IVoucherExtensionRepository VoucherExtension => _voucherExtensionRepository.Value;
		public IVoucherLookupListRepository VoucherLookupList => _voucherLookupListRepository.Value;
		public IVoucherStoreMappingRepository VoucherStoreMapping => _voucherStoreMappingRepository.Value;
		public IVoucherTermRepository VoucherTerm => _voucherTermRepository.Value;
		public IWriteUpRepository WriteUp => _writeUpRepository.Value;
    }
}
    