
using AutoMapper;
using CNET_V7_Logger;
using CNET_V7_Repository.Contracts;
using CNET_V7_Service.Contracts;
using CNET_V7_Service.Contracts.SecuritySchema;
using CNET_V7_Service.Implementation.SecuritySchema;
using CNET_V7_Service.Contracts.AccountingSchema;
using CNET_V7_Service.Implementation.AccountingSchema;
using CNET_V7_Service.Contracts.CommonSchema;
using CNET_V7_Service.Implementation.CommonSchema;
using CNET_V7_Service.Contracts.SettingSchema;
using CNET_V7_Service.Implementation.SettingSchema;
using CNET_V7_Service.Contracts.QuestionarySchema;
using CNET_V7_Service.Implementation.QuestionarySchema;
using CNET_V7_Service.Contracts.ArticleSchema;
using CNET_V7_Service.Implementation.ArticleSchema;
using CNET_V7_Service.Contracts.HrmsSchema;
using CNET_V7_Service.Implementation.HrmsSchema;
using CNET_V7_Service.Contracts.ConsigneeSchema;
using CNET_V7_Service.Implementation.ConsigneeSchema;
using CNET_V7_Service.Contracts.TransactionSchema;
using CNET_V7_Service.Implementation.TransactionSchema;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CNET_V7_Service.Implementation
{
    public class ServiceManager : IServiceManager
    {

        
		private readonly Lazy<IAccessMatrixService> _accessMatrixService;
		private readonly Lazy<IAccountService> _accountService;
		private readonly Lazy<IAccountMapService> _accountMapService;
		private readonly Lazy<IAcLogService> _acLogService;
		private readonly Lazy<IActivityService> _activityService;
		private readonly Lazy<IActivityDefinitionService> _activityDefinitionService;
		private readonly Lazy<IAnswerKeyService> _answerKeyService;
		private readonly Lazy<IAnswerSheetService> _answerSheetService;
		private readonly Lazy<IArticleService> _articleService;
		private readonly Lazy<IArticleUserService> _articleUserService;
		private readonly Lazy<IAttachmentService> _attachmentService;
		private readonly Lazy<IAttendanceLogService> _attendanceLogService;
		private readonly Lazy<IBankAccountDetailService> _bankAccountDetailService;
		private readonly Lazy<IBeginingBalanceService> _beginingBalanceService;
		private readonly Lazy<IBeginingTransactionService> _beginingTransactionService;
		private readonly Lazy<IBlankFillService> _blankFillService;
		private readonly Lazy<ICardService> _cardService;
		private readonly Lazy<IChooseService> _chooseService;
		private readonly Lazy<IClosedRelationService> _closedRelationService;
		private readonly Lazy<ICloudSyncService> _cloudSyncService;
		private readonly Lazy<ICnetlicenseService> _cnetlicenseService;
		private readonly Lazy<ICnetmediumService> _cnetmediumService;
		private readonly Lazy<IConfigurationService> _configurationService;
		private readonly Lazy<IConsigneeService> _consigneeService;
		private readonly Lazy<IConsigneeUnitService> _consigneeUnitService;
		private readonly Lazy<IConsigneeUserService> _consigneeUserService;
		private readonly Lazy<IControlAccountService> _controlAccountService;
		private readonly Lazy<IConversionDefinitionService> _conversionDefinitionService;
		private readonly Lazy<ICountryService> _countryService;
		private readonly Lazy<ICurrencyService> _currencyService;
		private readonly Lazy<IDelegateService> _delegateService;
		private readonly Lazy<IDenominationService> _denominationService;
		private readonly Lazy<IDenominationDetailService> _denominationDetailService;
		private readonly Lazy<IDepreciationRuleService> _depreciationRuleService;
		private readonly Lazy<IDeviceService> _deviceService;
		private readonly Lazy<IDiscountFactorService> _discountFactorService;
		private readonly Lazy<IDistributionService> _distributionService;
		private readonly Lazy<IEvaluationSheetService> _evaluationSheetService;
		private readonly Lazy<IExchangeRateService> _exchangeRateService;
		private readonly Lazy<IFieldFormatService> _fieldFormatService;
		private readonly Lazy<IFunctionalityService> _functionalityService;
		private readonly Lazy<IGslacctRequirementService> _gslacctRequirementService;
		private readonly Lazy<IGsltaxService> _gsltaxService;
		private readonly Lazy<IGsluserService> _gsluserService;
		private readonly Lazy<IHolidayService> _holidayService;
		private readonly Lazy<IHolidayDefinitionService> _holidayDefinitionService;
		private readonly Lazy<IIddefinitionService> _iddefinitionService;
		private readonly Lazy<IIdentificationService> _identificationService;
		private readonly Lazy<IIdsettingService> _idsettingService;
		private readonly Lazy<IIssuedCardService> _issuedCardService;
		private readonly Lazy<IJournalDetailService> _journalDetailService;
		private readonly Lazy<ILanguageService> _languageService;
		private readonly Lazy<ILanguagePreferenceService> _languagePreferenceService;
		private readonly Lazy<ILineItemService> _lineItemService;
		private readonly Lazy<ILineItemConversionService> _lineItemConversionService;
		private readonly Lazy<ILineItemReferenceService> _lineItemReferenceService;
		private readonly Lazy<ILineItemValueFactorService> _lineItemValueFactorService;
		private readonly Lazy<ILocationService> _locationService;
		private readonly Lazy<ILookupService> _lookupService;
		private readonly Lazy<IMenuDesignerService> _menuDesignerService;
		private readonly Lazy<IMovieService> _movieService;
		private readonly Lazy<IMovieScheduleService> _movieScheduleService;
		private readonly Lazy<INonCashTransactionService> _nonCashTransactionService;
		private readonly Lazy<IObjectStateService> _objectStateService;
		private readonly Lazy<IObjectStateDefinitionService> _objectStateDefinitionService;
		private readonly Lazy<IOrderStationMapService> _orderStationMapService;
		private readonly Lazy<IPeriodService> _periodService;
		private readonly Lazy<IPreferenceService> _preferenceService;
		private readonly Lazy<IPreferenceAccessService> _preferenceAccessService;
		private readonly Lazy<IPreferentialValueFactorService> _preferentialValueFactorService;
		private readonly Lazy<IProgressTaxRateService> _progressTaxRateService;
		private readonly Lazy<IQuestionService> _questionService;
		private readonly Lazy<IQuestionDetailService> _questionDetailService;
		private readonly Lazy<IQuestionRouterService> _questionRouterService;
		private readonly Lazy<IRangeService> _rangeService;
		private readonly Lazy<IReconciliationDetailService> _reconciliationDetailService;
		private readonly Lazy<IReconciliationSummaryService> _reconciliationSummaryService;
		private readonly Lazy<IRelationService> _relationService;
		private readonly Lazy<IRelationalStateService> _relationalStateService;
		private readonly Lazy<IReportService> _reportService;
		private readonly Lazy<IReportHistoryService> _reportHistoryService;
		private readonly Lazy<IRequiredGslService> _requiredGslService;
		private readonly Lazy<IRequiredGsldetailService> _requiredGsldetailService;
		private readonly Lazy<IRoleActivityService> _roleActivityService;
		private readonly Lazy<IRouteService> _routeService;
		private readonly Lazy<IRouteAssignmentService> _routeAssignmentService;
		private readonly Lazy<IScheduleService> _scheduleService;
		private readonly Lazy<IScheduleDetailService> _scheduleDetailService;
		private readonly Lazy<IScheduleHeaderService> _scheduleHeaderService;
		private readonly Lazy<ISeasonalMessageService> _seasonalMessageService;
		private readonly Lazy<ISeatArrangementService> _seatArrangementService;
		private readonly Lazy<ISeatTransactionService> _seatTransactionService;
		private readonly Lazy<ISerialDefinitionService> _serialDefinitionService;
		private readonly Lazy<ISpaceService> _spaceService;
		private readonly Lazy<ISpaceDirectionService> _spaceDirectionService;
		private readonly Lazy<ISpecificationService> _specificationService;
		private readonly Lazy<IStockBalanceService> _stockBalanceService;
		private readonly Lazy<IStockLevelService> _stockLevelService;
		private readonly Lazy<ISubCountryService> _subCountryService;
		private readonly Lazy<ISubtitleService> _subtitleService;
		private readonly Lazy<ISystemConstantService> _systemConstantService;
		private readonly Lazy<ITaxService> _taxService;
		private readonly Lazy<ITaxTransactionService> _taxTransactionService;
		private readonly Lazy<ITermDefinitionService> _termDefinitionService;
		private readonly Lazy<ITransactionCurrencyService> _transactionCurrencyService;
		private readonly Lazy<ITransactionLimitService> _transactionLimitService;
		private readonly Lazy<ITransactionReferenceService> _transactionReferenceService;
		private readonly Lazy<ITrialBalanceService> _trialBalanceService;
		private readonly Lazy<IUserService> _userService;
		private readonly Lazy<IUserRoleMapperService> _userRoleMapperService;
		private readonly Lazy<IValueService> _valueService;
		private readonly Lazy<IValueChangeLogService> _valueChangeLogService;
		private readonly Lazy<IValueFactorService> _valueFactorService;
		private readonly Lazy<IValueFactorDefinitionService> _valueFactorDefinitionService;
		private readonly Lazy<IValueFactorSetupService> _valueFactorSetupService;
		private readonly Lazy<IVoucherService> _voucherService;
		private readonly Lazy<IVoucherAccountService> _voucherAccountService;
		private readonly Lazy<IVoucherConsigneeListService> _voucherConsigneeListService;
		private readonly Lazy<IVoucherExtensionService> _voucherExtensionService;
		private readonly Lazy<IVoucherLookupListService> _voucherLookupListService;
		private readonly Lazy<IVoucherStoreMappingService> _voucherStoreMappingService;
		private readonly Lazy<IVoucherTermService> _voucherTermService;
		private readonly Lazy<IWriteUpService> _writeUpService;
        public ServiceManager(IRepositoryManager repositoryManager, ILoggerManager logger, IMapper mapper)
        {
            
			_accessMatrixService = new Lazy<IAccessMatrixService>(()=>new AccessMatrixService(repositoryManager, logger, mapper));
			_accountService = new Lazy<IAccountService>(()=>new AccountService(repositoryManager, logger, mapper));
			_accountMapService = new Lazy<IAccountMapService>(()=>new AccountMapService(repositoryManager, logger, mapper));
			_acLogService = new Lazy<IAcLogService>(()=>new AcLogService(repositoryManager, logger, mapper));
			_activityService = new Lazy<IActivityService>(()=>new ActivityService(repositoryManager, logger, mapper));
			_activityDefinitionService = new Lazy<IActivityDefinitionService>(()=>new ActivityDefinitionService(repositoryManager, logger, mapper));
			_answerKeyService = new Lazy<IAnswerKeyService>(()=>new AnswerKeyService(repositoryManager, logger, mapper));
			_answerSheetService = new Lazy<IAnswerSheetService>(()=>new AnswerSheetService(repositoryManager, logger, mapper));
			_articleService = new Lazy<IArticleService>(()=>new ArticleService(repositoryManager, logger, mapper));
			_articleUserService = new Lazy<IArticleUserService>(()=>new ArticleUserService(repositoryManager, logger, mapper));
			_attachmentService = new Lazy<IAttachmentService>(()=>new AttachmentService(repositoryManager, logger, mapper));
			_attendanceLogService = new Lazy<IAttendanceLogService>(()=>new AttendanceLogService(repositoryManager, logger, mapper));
			_bankAccountDetailService = new Lazy<IBankAccountDetailService>(()=>new BankAccountDetailService(repositoryManager, logger, mapper));
			_beginingBalanceService = new Lazy<IBeginingBalanceService>(()=>new BeginingBalanceService(repositoryManager, logger, mapper));
			_beginingTransactionService = new Lazy<IBeginingTransactionService>(()=>new BeginingTransactionService(repositoryManager, logger, mapper));
			_blankFillService = new Lazy<IBlankFillService>(()=>new BlankFillService(repositoryManager, logger, mapper));
			_cardService = new Lazy<ICardService>(()=>new CardService(repositoryManager, logger, mapper));
			_chooseService = new Lazy<IChooseService>(()=>new ChooseService(repositoryManager, logger, mapper));
			_closedRelationService = new Lazy<IClosedRelationService>(()=>new ClosedRelationService(repositoryManager, logger, mapper));
			_cloudSyncService = new Lazy<ICloudSyncService>(()=>new CloudSyncService(repositoryManager, logger, mapper));
			_cnetlicenseService = new Lazy<ICnetlicenseService>(()=>new CnetlicenseService(repositoryManager, logger, mapper));
			_cnetmediumService = new Lazy<ICnetmediumService>(()=>new CnetmediumService(repositoryManager, logger, mapper));
			_configurationService = new Lazy<IConfigurationService>(()=>new ConfigurationService(repositoryManager, logger, mapper));
			_consigneeService = new Lazy<IConsigneeService>(()=>new ConsigneeService(repositoryManager, logger, mapper));
			_consigneeUnitService = new Lazy<IConsigneeUnitService>(()=>new ConsigneeUnitService(repositoryManager, logger, mapper));
			_consigneeUserService = new Lazy<IConsigneeUserService>(()=>new ConsigneeUserService(repositoryManager, logger, mapper));
			_controlAccountService = new Lazy<IControlAccountService>(()=>new ControlAccountService(repositoryManager, logger, mapper));
			_conversionDefinitionService = new Lazy<IConversionDefinitionService>(()=>new ConversionDefinitionService(repositoryManager, logger, mapper));
			_countryService = new Lazy<ICountryService>(()=>new CountryService(repositoryManager, logger, mapper));
			_currencyService = new Lazy<ICurrencyService>(()=>new CurrencyService(repositoryManager, logger, mapper));
			_delegateService = new Lazy<IDelegateService>(()=>new DelegateService(repositoryManager, logger, mapper));
			_denominationService = new Lazy<IDenominationService>(()=>new DenominationService(repositoryManager, logger, mapper));
			_denominationDetailService = new Lazy<IDenominationDetailService>(()=>new DenominationDetailService(repositoryManager, logger, mapper));
			_depreciationRuleService = new Lazy<IDepreciationRuleService>(()=>new DepreciationRuleService(repositoryManager, logger, mapper));
			_deviceService = new Lazy<IDeviceService>(()=>new DeviceService(repositoryManager, logger, mapper));
			_discountFactorService = new Lazy<IDiscountFactorService>(()=>new DiscountFactorService(repositoryManager, logger, mapper));
			_distributionService = new Lazy<IDistributionService>(()=>new DistributionService(repositoryManager, logger, mapper));
			_evaluationSheetService = new Lazy<IEvaluationSheetService>(()=>new EvaluationSheetService(repositoryManager, logger, mapper));
			_exchangeRateService = new Lazy<IExchangeRateService>(()=>new ExchangeRateService(repositoryManager, logger, mapper));
			_fieldFormatService = new Lazy<IFieldFormatService>(()=>new FieldFormatService(repositoryManager, logger, mapper));
			_functionalityService = new Lazy<IFunctionalityService>(()=>new FunctionalityService(repositoryManager, logger, mapper));
			_gslacctRequirementService = new Lazy<IGslacctRequirementService>(()=>new GslacctRequirementService(repositoryManager, logger, mapper));
			_gsltaxService = new Lazy<IGsltaxService>(()=>new GsltaxService(repositoryManager, logger, mapper));
			_gsluserService = new Lazy<IGsluserService>(()=>new GsluserService(repositoryManager, logger, mapper));
			_holidayService = new Lazy<IHolidayService>(()=>new HolidayService(repositoryManager, logger, mapper));
			_holidayDefinitionService = new Lazy<IHolidayDefinitionService>(()=>new HolidayDefinitionService(repositoryManager, logger, mapper));
			_iddefinitionService = new Lazy<IIddefinitionService>(()=>new IddefinitionService(repositoryManager, logger, mapper));
			_identificationService = new Lazy<IIdentificationService>(()=>new IdentificationService(repositoryManager, logger, mapper));
			_idsettingService = new Lazy<IIdsettingService>(()=>new IdsettingService(repositoryManager, logger, mapper));
			_issuedCardService = new Lazy<IIssuedCardService>(()=>new IssuedCardService(repositoryManager, logger, mapper));
			_journalDetailService = new Lazy<IJournalDetailService>(()=>new JournalDetailService(repositoryManager, logger, mapper));
			_languageService = new Lazy<ILanguageService>(()=>new LanguageService(repositoryManager, logger, mapper));
			_languagePreferenceService = new Lazy<ILanguagePreferenceService>(()=>new LanguagePreferenceService(repositoryManager, logger, mapper));
			_lineItemService = new Lazy<ILineItemService>(()=>new LineItemService(repositoryManager, logger, mapper));
			_lineItemConversionService = new Lazy<ILineItemConversionService>(()=>new LineItemConversionService(repositoryManager, logger, mapper));
			_lineItemReferenceService = new Lazy<ILineItemReferenceService>(()=>new LineItemReferenceService(repositoryManager, logger, mapper));
			_lineItemValueFactorService = new Lazy<ILineItemValueFactorService>(()=>new LineItemValueFactorService(repositoryManager, logger, mapper));
			_locationService = new Lazy<ILocationService>(()=>new LocationService(repositoryManager, logger, mapper));
			_lookupService = new Lazy<ILookupService>(()=>new LookupService(repositoryManager, logger, mapper));
			_menuDesignerService = new Lazy<IMenuDesignerService>(()=>new MenuDesignerService(repositoryManager, logger, mapper));
			_movieService = new Lazy<IMovieService>(()=>new MovieService(repositoryManager, logger, mapper));
			_movieScheduleService = new Lazy<IMovieScheduleService>(()=>new MovieScheduleService(repositoryManager, logger, mapper));
			_nonCashTransactionService = new Lazy<INonCashTransactionService>(()=>new NonCashTransactionService(repositoryManager, logger, mapper));
			_objectStateService = new Lazy<IObjectStateService>(()=>new ObjectStateService(repositoryManager, logger, mapper));
			_objectStateDefinitionService = new Lazy<IObjectStateDefinitionService>(()=>new ObjectStateDefinitionService(repositoryManager, logger, mapper));
			_orderStationMapService = new Lazy<IOrderStationMapService>(()=>new OrderStationMapService(repositoryManager, logger, mapper));
			_periodService = new Lazy<IPeriodService>(()=>new PeriodService(repositoryManager, logger, mapper));
			_preferenceService = new Lazy<IPreferenceService>(()=>new PreferenceService(repositoryManager, logger, mapper));
			_preferenceAccessService = new Lazy<IPreferenceAccessService>(()=>new PreferenceAccessService(repositoryManager, logger, mapper));
			_preferentialValueFactorService = new Lazy<IPreferentialValueFactorService>(()=>new PreferentialValueFactorService(repositoryManager, logger, mapper));
			_progressTaxRateService = new Lazy<IProgressTaxRateService>(()=>new ProgressTaxRateService(repositoryManager, logger, mapper));
			_questionService = new Lazy<IQuestionService>(()=>new QuestionService(repositoryManager, logger, mapper));
			_questionDetailService = new Lazy<IQuestionDetailService>(()=>new QuestionDetailService(repositoryManager, logger, mapper));
			_questionRouterService = new Lazy<IQuestionRouterService>(()=>new QuestionRouterService(repositoryManager, logger, mapper));
			_rangeService = new Lazy<IRangeService>(()=>new RangeService(repositoryManager, logger, mapper));
			_reconciliationDetailService = new Lazy<IReconciliationDetailService>(()=>new ReconciliationDetailService(repositoryManager, logger, mapper));
			_reconciliationSummaryService = new Lazy<IReconciliationSummaryService>(()=>new ReconciliationSummaryService(repositoryManager, logger, mapper));
			_relationService = new Lazy<IRelationService>(()=>new RelationService(repositoryManager, logger, mapper));
			_relationalStateService = new Lazy<IRelationalStateService>(()=>new RelationalStateService(repositoryManager, logger, mapper));
			_reportService = new Lazy<IReportService>(()=>new ReportService(repositoryManager, logger, mapper));
			_reportHistoryService = new Lazy<IReportHistoryService>(()=>new ReportHistoryService(repositoryManager, logger, mapper));
			_requiredGslService = new Lazy<IRequiredGslService>(()=>new RequiredGslService(repositoryManager, logger, mapper));
			_requiredGsldetailService = new Lazy<IRequiredGsldetailService>(()=>new RequiredGsldetailService(repositoryManager, logger, mapper));
			_roleActivityService = new Lazy<IRoleActivityService>(()=>new RoleActivityService(repositoryManager, logger, mapper));
			_routeService = new Lazy<IRouteService>(()=>new RouteService(repositoryManager, logger, mapper));
			_routeAssignmentService = new Lazy<IRouteAssignmentService>(()=>new RouteAssignmentService(repositoryManager, logger, mapper));
			_scheduleService = new Lazy<IScheduleService>(()=>new ScheduleService(repositoryManager, logger, mapper));
			_scheduleDetailService = new Lazy<IScheduleDetailService>(()=>new ScheduleDetailService(repositoryManager, logger, mapper));
			_scheduleHeaderService = new Lazy<IScheduleHeaderService>(()=>new ScheduleHeaderService(repositoryManager, logger, mapper));
			_seasonalMessageService = new Lazy<ISeasonalMessageService>(()=>new SeasonalMessageService(repositoryManager, logger, mapper));
			_seatArrangementService = new Lazy<ISeatArrangementService>(()=>new SeatArrangementService(repositoryManager, logger, mapper));
			_seatTransactionService = new Lazy<ISeatTransactionService>(()=>new SeatTransactionService(repositoryManager, logger, mapper));
			_serialDefinitionService = new Lazy<ISerialDefinitionService>(()=>new SerialDefinitionService(repositoryManager, logger, mapper));
			_spaceService = new Lazy<ISpaceService>(()=>new SpaceService(repositoryManager, logger, mapper));
			_spaceDirectionService = new Lazy<ISpaceDirectionService>(()=>new SpaceDirectionService(repositoryManager, logger, mapper));
			_specificationService = new Lazy<ISpecificationService>(()=>new SpecificationService(repositoryManager, logger, mapper));
			_stockBalanceService = new Lazy<IStockBalanceService>(()=>new StockBalanceService(repositoryManager, logger, mapper));
			_stockLevelService = new Lazy<IStockLevelService>(()=>new StockLevelService(repositoryManager, logger, mapper));
			_subCountryService = new Lazy<ISubCountryService>(()=>new SubCountryService(repositoryManager, logger, mapper));
			_subtitleService = new Lazy<ISubtitleService>(()=>new SubtitleService(repositoryManager, logger, mapper));
			_systemConstantService = new Lazy<ISystemConstantService>(()=>new SystemConstantService(repositoryManager, logger, mapper));
			_taxService = new Lazy<ITaxService>(()=>new TaxService(repositoryManager, logger, mapper));
			_taxTransactionService = new Lazy<ITaxTransactionService>(()=>new TaxTransactionService(repositoryManager, logger, mapper));
			_termDefinitionService = new Lazy<ITermDefinitionService>(()=>new TermDefinitionService(repositoryManager, logger, mapper));
			_transactionCurrencyService = new Lazy<ITransactionCurrencyService>(()=>new TransactionCurrencyService(repositoryManager, logger, mapper));
			_transactionLimitService = new Lazy<ITransactionLimitService>(()=>new TransactionLimitService(repositoryManager, logger, mapper));
			_transactionReferenceService = new Lazy<ITransactionReferenceService>(()=>new TransactionReferenceService(repositoryManager, logger, mapper));
			_trialBalanceService = new Lazy<ITrialBalanceService>(()=>new TrialBalanceService(repositoryManager, logger, mapper));
			_userService = new Lazy<IUserService>(()=>new UserService(repositoryManager, logger, mapper));
			_userRoleMapperService = new Lazy<IUserRoleMapperService>(()=>new UserRoleMapperService(repositoryManager, logger, mapper));
			_valueService = new Lazy<IValueService>(()=>new ValueService(repositoryManager, logger, mapper));
			_valueChangeLogService = new Lazy<IValueChangeLogService>(()=>new ValueChangeLogService(repositoryManager, logger, mapper));
			_valueFactorService = new Lazy<IValueFactorService>(()=>new ValueFactorService(repositoryManager, logger, mapper));
			_valueFactorDefinitionService = new Lazy<IValueFactorDefinitionService>(()=>new ValueFactorDefinitionService(repositoryManager, logger, mapper));
			_valueFactorSetupService = new Lazy<IValueFactorSetupService>(()=>new ValueFactorSetupService(repositoryManager, logger, mapper));
			_voucherService = new Lazy<IVoucherService>(()=>new VoucherService(repositoryManager, logger, mapper));
			_voucherAccountService = new Lazy<IVoucherAccountService>(()=>new VoucherAccountService(repositoryManager, logger, mapper));
			_voucherConsigneeListService = new Lazy<IVoucherConsigneeListService>(()=>new VoucherConsigneeListService(repositoryManager, logger, mapper));
			_voucherExtensionService = new Lazy<IVoucherExtensionService>(()=>new VoucherExtensionService(repositoryManager, logger, mapper));
			_voucherLookupListService = new Lazy<IVoucherLookupListService>(()=>new VoucherLookupListService(repositoryManager, logger, mapper));
			_voucherStoreMappingService = new Lazy<IVoucherStoreMappingService>(()=>new VoucherStoreMappingService(repositoryManager, logger, mapper));
			_voucherTermService = new Lazy<IVoucherTermService>(()=>new VoucherTermService(repositoryManager, logger, mapper));
			_writeUpService = new Lazy<IWriteUpService>(()=>new WriteUpService(repositoryManager, logger, mapper));
        }
        
        
		public IAccessMatrixService accessMatrixService => _accessMatrixService.Value;
		public IAccountService accountService => _accountService.Value;
		public IAccountMapService accountMapService => _accountMapService.Value;
		public IAcLogService acLogService => _acLogService.Value;
		public IActivityService activityService => _activityService.Value;
		public IActivityDefinitionService activityDefinitionService => _activityDefinitionService.Value;
		public IAnswerKeyService answerKeyService => _answerKeyService.Value;
		public IAnswerSheetService answerSheetService => _answerSheetService.Value;
		public IArticleService articleService => _articleService.Value;
		public IArticleUserService articleUserService => _articleUserService.Value;
		public IAttachmentService attachmentService => _attachmentService.Value;
		public IAttendanceLogService attendanceLogService => _attendanceLogService.Value;
		public IBankAccountDetailService bankAccountDetailService => _bankAccountDetailService.Value;
		public IBeginingBalanceService beginingBalanceService => _beginingBalanceService.Value;
		public IBeginingTransactionService beginingTransactionService => _beginingTransactionService.Value;
		public IBlankFillService blankFillService => _blankFillService.Value;
		public ICardService cardService => _cardService.Value;
		public IChooseService chooseService => _chooseService.Value;
		public IClosedRelationService closedRelationService => _closedRelationService.Value;
		public ICloudSyncService cloudSyncService => _cloudSyncService.Value;
		public ICnetlicenseService cnetlicenseService => _cnetlicenseService.Value;
		public ICnetmediumService cnetmediumService => _cnetmediumService.Value;
		public IConfigurationService configurationService => _configurationService.Value;
		public IConsigneeService consigneeService => _consigneeService.Value;
		public IConsigneeUnitService consigneeUnitService => _consigneeUnitService.Value;
		public IConsigneeUserService consigneeUserService => _consigneeUserService.Value;
		public IControlAccountService controlAccountService => _controlAccountService.Value;
		public IConversionDefinitionService conversionDefinitionService => _conversionDefinitionService.Value;
		public ICountryService countryService => _countryService.Value;
		public ICurrencyService currencyService => _currencyService.Value;
		public IDelegateService delegateService => _delegateService.Value;
		public IDenominationService denominationService => _denominationService.Value;
		public IDenominationDetailService denominationDetailService => _denominationDetailService.Value;
		public IDepreciationRuleService depreciationRuleService => _depreciationRuleService.Value;
		public IDeviceService deviceService => _deviceService.Value;
		public IDiscountFactorService discountFactorService => _discountFactorService.Value;
		public IDistributionService distributionService => _distributionService.Value;
		public IEvaluationSheetService evaluationSheetService => _evaluationSheetService.Value;
		public IExchangeRateService exchangeRateService => _exchangeRateService.Value;
		public IFieldFormatService fieldFormatService => _fieldFormatService.Value;
		public IFunctionalityService functionalityService => _functionalityService.Value;
		public IGslacctRequirementService gslacctRequirementService => _gslacctRequirementService.Value;
		public IGsltaxService gsltaxService => _gsltaxService.Value;
		public IGsluserService gsluserService => _gsluserService.Value;
		public IHolidayService holidayService => _holidayService.Value;
		public IHolidayDefinitionService holidayDefinitionService => _holidayDefinitionService.Value;
		public IIddefinitionService iddefinitionService => _iddefinitionService.Value;
		public IIdentificationService identificationService => _identificationService.Value;
		public IIdsettingService idsettingService => _idsettingService.Value;
		public IIssuedCardService issuedCardService => _issuedCardService.Value;
		public IJournalDetailService journalDetailService => _journalDetailService.Value;
		public ILanguageService languageService => _languageService.Value;
		public ILanguagePreferenceService languagePreferenceService => _languagePreferenceService.Value;
		public ILineItemService lineItemService => _lineItemService.Value;
		public ILineItemConversionService lineItemConversionService => _lineItemConversionService.Value;
		public ILineItemReferenceService lineItemReferenceService => _lineItemReferenceService.Value;
		public ILineItemValueFactorService lineItemValueFactorService => _lineItemValueFactorService.Value;
		public ILocationService locationService => _locationService.Value;
		public ILookupService lookupService => _lookupService.Value;
		public IMenuDesignerService menuDesignerService => _menuDesignerService.Value;
		public IMovieService movieService => _movieService.Value;
		public IMovieScheduleService movieScheduleService => _movieScheduleService.Value;
		public INonCashTransactionService nonCashTransactionService => _nonCashTransactionService.Value;
		public IObjectStateService objectStateService => _objectStateService.Value;
		public IObjectStateDefinitionService objectStateDefinitionService => _objectStateDefinitionService.Value;
		public IOrderStationMapService orderStationMapService => _orderStationMapService.Value;
		public IPeriodService periodService => _periodService.Value;
		public IPreferenceService preferenceService => _preferenceService.Value;
		public IPreferenceAccessService preferenceAccessService => _preferenceAccessService.Value;
		public IPreferentialValueFactorService preferentialValueFactorService => _preferentialValueFactorService.Value;
		public IProgressTaxRateService progressTaxRateService => _progressTaxRateService.Value;
		public IQuestionService questionService => _questionService.Value;
		public IQuestionDetailService questionDetailService => _questionDetailService.Value;
		public IQuestionRouterService questionRouterService => _questionRouterService.Value;
		public IRangeService rangeService => _rangeService.Value;
		public IReconciliationDetailService reconciliationDetailService => _reconciliationDetailService.Value;
		public IReconciliationSummaryService reconciliationSummaryService => _reconciliationSummaryService.Value;
		public IRelationService relationService => _relationService.Value;
		public IRelationalStateService relationalStateService => _relationalStateService.Value;
		public IReportService reportService => _reportService.Value;
		public IReportHistoryService reportHistoryService => _reportHistoryService.Value;
		public IRequiredGslService requiredGslService => _requiredGslService.Value;
		public IRequiredGsldetailService requiredGsldetailService => _requiredGsldetailService.Value;
		public IRoleActivityService roleActivityService => _roleActivityService.Value;
		public IRouteService routeService => _routeService.Value;
		public IRouteAssignmentService routeAssignmentService => _routeAssignmentService.Value;
		public IScheduleService scheduleService => _scheduleService.Value;
		public IScheduleDetailService scheduleDetailService => _scheduleDetailService.Value;
		public IScheduleHeaderService scheduleHeaderService => _scheduleHeaderService.Value;
		public ISeasonalMessageService seasonalMessageService => _seasonalMessageService.Value;
		public ISeatArrangementService seatArrangementService => _seatArrangementService.Value;
		public ISeatTransactionService seatTransactionService => _seatTransactionService.Value;
		public ISerialDefinitionService serialDefinitionService => _serialDefinitionService.Value;
		public ISpaceService spaceService => _spaceService.Value;
		public ISpaceDirectionService spaceDirectionService => _spaceDirectionService.Value;
		public ISpecificationService specificationService => _specificationService.Value;
		public IStockBalanceService stockBalanceService => _stockBalanceService.Value;
		public IStockLevelService stockLevelService => _stockLevelService.Value;
		public ISubCountryService subCountryService => _subCountryService.Value;
		public ISubtitleService subtitleService => _subtitleService.Value;
		public ISystemConstantService systemConstantService => _systemConstantService.Value;
		public ITaxService taxService => _taxService.Value;
		public ITaxTransactionService taxTransactionService => _taxTransactionService.Value;
		public ITermDefinitionService termDefinitionService => _termDefinitionService.Value;
		public ITransactionCurrencyService transactionCurrencyService => _transactionCurrencyService.Value;
		public ITransactionLimitService transactionLimitService => _transactionLimitService.Value;
		public ITransactionReferenceService transactionReferenceService => _transactionReferenceService.Value;
		public ITrialBalanceService trialBalanceService => _trialBalanceService.Value;
		public IUserService userService => _userService.Value;
		public IUserRoleMapperService userRoleMapperService => _userRoleMapperService.Value;
		public IValueService valueService => _valueService.Value;
		public IValueChangeLogService valueChangeLogService => _valueChangeLogService.Value;
		public IValueFactorService valueFactorService => _valueFactorService.Value;
		public IValueFactorDefinitionService valueFactorDefinitionService => _valueFactorDefinitionService.Value;
		public IValueFactorSetupService valueFactorSetupService => _valueFactorSetupService.Value;
		public IVoucherService voucherService => _voucherService.Value;
		public IVoucherAccountService voucherAccountService => _voucherAccountService.Value;
		public IVoucherConsigneeListService voucherConsigneeListService => _voucherConsigneeListService.Value;
		public IVoucherExtensionService voucherExtensionService => _voucherExtensionService.Value;
		public IVoucherLookupListService voucherLookupListService => _voucherLookupListService.Value;
		public IVoucherStoreMappingService voucherStoreMappingService => _voucherStoreMappingService.Value;
		public IVoucherTermService voucherTermService => _voucherTermService.Value;
		public IWriteUpService writeUpService => _writeUpService.Value;
    }
}

    